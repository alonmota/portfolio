'use client'
export default function Experience() {
	const experiences = [
		{
			id: 0,
			company: 'Liblab',
			title: 'Software Engineer',
			startDate: new Date(2023, 3),
			endDate: new Date(2023, 9),
			stack: ['Node.js', 'Python', 'Langchain', 'Oclif'],
			accomplishments: [
				`Built an AI service to document company autogenerated SDK's using Python and Langchain`,
				`Added feature to Node.js CLI that allowed creating automatic PR's on Github`
			]
		},
		{
			id: 1,
			company: 'Team Liquid',
			title: 'Sr. Backend Developer',
			startDate: new Date(2022, 0),
			endDate: new Date(2023, 3),
			stack: ['Node.js', 'PostgreSQL', 'MongoDB', 'Redis', 'Sequelize', 'Docker', 'Nginx', 'React', 'Redux'],
			accomplishments: [
				`Created a private NPM package to handle backend Localization`,
				`Maintained Node.js monolith backend to improve error handling and add translation support`,
				`Maintained React APP with over 110k users`,
			]
		},
		{
			id: 2,
			company: 'Softo',
			title: 'Backend Developer',
			startDate: new Date(2021, 6),
			endDate: new Date(2021, 11),
			stack: ['Node.js', 'Nest.js', 'PostgreSQL', 'GraphQL', 'Redis', 'RabbitMQ', 'CASL', 'Nginx'],
			accomplishments: [
				`Created authentication and user managements services for a backend using microservice architecture in Nest.js`,
				`Fixed critical database failure that existed in all company projects in PostgreSQL`,
				`Architected docker networks to make them more reliable and secure`,
				`Developed GraphQL backend applications with cache, sockets and more`
			]
		},
		{
			id: 3,
			company: 'CGEE',
			title: 'Senior Fullstack Developer',
			startDate: new Date(2016, 6),
			endDate: new Date(2021, 5),
			stack: ['Node.js', 'MongoDB', 'Angular+', 'Java', 'SpringMVC', 'PostgreSQL', 'Vue', 'd3'],
			accomplishments: [
				`Created ISurvey, a CMS to plan, release and monitor surveys using Angular and Node.js`,
				`Maintained legacy Java application for managing contracts`,
				`Created data visualization interfaces using Vue and d3`
			]
		},
	]
	return (
		<section
			id='experience'
			className="flex flex-col md:flex-row justify-center w-full h-full max-h-full p-4 bg-light text-dark relative "
		>
			<h2 className="flex flex-row items-center min-w-[200px] justify-center text-3xl md:basis-1/3 mb-4 md:mb-0">Experience</h2>
			<div
				className="flex flex-row flex-grow items-center min-w-[250px] md:h-full justify-center text-3xl basis-1/3 mb-4 md:mb-0 overflow-y-auto"
			>
				<div className="h-full w-full grid grid-cols-1 gap-2 rounded-lg">
					{
						experiences.map((experience) => (
							<div
								key={experience.id}
								className="block p-2 basis-1/3 h-max min-h-full min-w-[200px] shadow-lg bg-neutral text-light rounded-md"
							>
								<div className="flex flex-row flex-wrap flex-grow justify-between m-2">
									<h3 className="text-large font-bold">{experience.title} - {experience.company}</h3>
									<span className="text-small font-light float-end">
										{
											(experience.startDate.getMonth() + 1).toString() 
												+ '/'
												+ experience.startDate.getFullYear().toString()} - {(experience.endDate.getMonth() + 1).toString() + '/'+ experience.endDate.getFullYear().toString()
										}
									</span>
								</div>
								<div className="flex flex-row flex-wrap mx">
									{
										experience.stack.map((text, i) => (
											<span key={i} className="m-1 py-1 px-2 rounded-full bg-highlight text-dark text-xs">{text}</span>
										))
									}
								</div>
								{
									experience.accomplishments.map((text, i) => (
										<p key={i} className="m-2 text-sm font-normal">â€¢ {text}</p>
									))
								}
							</div>
						))
					}
				</div>
			</div>

		</section>
	)
}
